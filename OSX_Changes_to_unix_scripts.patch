diff --color -ru genesis/scripts/unix/python3/pymodules/genesis.py scripts/unix/python3/pymodules/genesis.py
--- genesis/scripts/unix/python3/pymodules/genesis.py	2024-02-28 11:31:54
+++ genesis/scripts/unix/python3/pymodules/genesis.py	2024-02-28 08:39:12
@@ -384,7 +384,7 @@
 
     pid = None
     userName = user_name()
-    cmd = 'ps -lf -u ' + userName
+    cmd = 'ps -o pid,command -u ' + userName
     args = shlex.split(cmd)
     output, error = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()
     processes = output.decode('utf-8').split('\n')
@@ -396,7 +396,7 @@
                 process.find('startProcess') == -1 and
                 process.find('GenesisRun') == -1):
             processSplit = process.split()
-            pid = processSplit[3]
+            pid = processSplit[0]
 
     return pid
 
@@ -407,7 +407,7 @@
 
     pid = None
     userName = user_name()
-    cmd = 'ps -lf -u ' + userName
+    cmd = 'ps -o pid,command -u ' + userName
     args = shlex.split(cmd)
     output,error = subprocess.Popen(args,stdout=subprocess.PIPE,stderr=subprocess.PIPE).communicate()
     processes = output.decode('utf-8').split('\n')
@@ -419,7 +419,7 @@
                 process.find('startProcess') == -1 and
                 process.find('GenesisRun') == -1):
             processSplit = process.split()
-            pid = processSplit[3]
+            pid = processSplit[0]
 
     return pid
 
@@ -431,7 +431,7 @@
     """
     pid = None
     userName = user_name()
-    cmd = 'ps -lf -u ' + userName
+    cmd = 'ps -o pid,command -u ' + userName
     args = shlex.split(cmd)
     output = subprocess.check_output(args)
     processes = output.decode('utf-8').split('\n')
@@ -440,7 +440,7 @@
         if (process.find("ResourceDaemonStarter") > -1 and
                 process.find(str(os.getpid())) == -1):
             processSplit = process.split()
-            pid = processSplit[3]
+            pid = processSplit[0]
 
     return pid
 
@@ -452,9 +452,9 @@
     # myPid = str(os.getpid())
     pids = [None] * len(givenProcesses)
     # This has better compatibility with other linux systems
-    # cmd = 'ps -lf -u ' + userName
+    # cmd = 'ps -ef -u ' + userName
     # This is faster in CentOs
-    cmd = 'ps -o pid,cmd -u ' + user_name()
+    cmd = 'ps -o pid,command -u ' + user_name()
     args = shlex.split(cmd)
     output, error = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()
     foundProcesses = output.decode('utf-8').split('\n')
diff --color -ru genesis/scripts/unix/startProcessRestarter scripts/unix/startProcessRestarter
--- genesis/scripts/unix/startProcessRestarter	2024-03-11 11:44:36
+++ genesis/scripts/unix/startProcessRestarter	2024-03-11 12:34:32
@@ -1,5 +1,8 @@
 #!/bin/bash
 
+echo "Process restarter is not applicable for development environment - skipping it."
+exit
+
 IS_PROCESS_RUNNING=$(python3 -c"import genesis; print(genesis.checkScriptIsRunning('processRestarter.py'))")
 if [ "None" = "$IS_PROCESS_RUNNING" ]; then
     nohup python3 -u $GENESIS_HOME/genesis/scripts/$GENESIS_OS/python3/processRestarter.py > $GENESIS_HOME/runtime/logs/processRestarter.log 2>&1 &